{"address":"ct_5rUQfWmQEbeTtKHDs7vkKkphdcJRWuu5Yo144BkB3BVQP2zNm","bytecode":"cb_+QH8RgOg8EIoivFsivCn+1mRwNmKuKuHAqqOuHt6pZm2ipdfT4LAuQHOuQEY/gm3j+cANwAHVQArCIIA/hb1zF4ANwAHUwAA/j1f7yMANwAHAQKG/kEPzJ0ANwEHNwAaCgCCVQArCAAiEAAHDAQBAz8aCgqCVQArCAoVEABVAC0KgoIVGoaGAFUAZQQAAQM//kTWRB8ANwA3ABoOgi8AVQKEGg6GAAEDP/54h5YLBDcAFwED//7PBQurADcCRwAHNwBVACAghAcMBPsDbU9ubHkgb3duZXIgY2FuIHNldCByZWNlaXZlclMAIhACBwwODAM/BgMIDwJvgibPUwAiIIYHDAwVGoaGAgEDPy1agoIAAgEDPxQahoYCDAM/BgMI/v7/gCsANwA3AFUAICCEBwwEAQM/GgoEhlMAFSAEVQBlAAEDP7iuLwgRCbeP50FjaGVja1VzZXJCYWxhbmNlERb1zF5RY2hlY2tDb250cmFjdEJhbGFuY2URPV/vI2lnZXRTdW1PZlRvdGFsQmFsYW5jZU9mVXNlchFBD8ydIXdpdGhkcmF3EUTWRB8RaW5pdBF4h5YLbXNlbmRfbW9uZXlfdG9fdGhpc19jb250cmFjdBHPBQurMXNldF9yZWNlaXZlchH+/4ArLXdpdGhkcmF3QWxsgi8AhTYuMS4wAJ8x+i8=","aci":{"encodedAci":{"contract":{"functions":[{"arguments":[],"name":"init","payable":false,"returns":"AeForUsers.state","stateful":true},{"arguments":[],"name":"send_money_to_this_contract","payable":true,"returns":"bool","stateful":true},{"arguments":[{"name":"raddress","type":"address"},{"name":"can_withdraw","type":"int"}],"name":"set_receiver","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"amount_to_withdraw","type":"int"}],"name":"withdraw","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"checkUserBalance","payable":false,"returns":"int","stateful":true},{"arguments":[],"name":"checkContractBalance","payable":false,"returns":"int","stateful":true},{"arguments":[],"name":"getSumOfTotalBalanceOfUser","payable":false,"returns":"int","stateful":true},{"arguments":[],"name":"withdrawAll","payable":false,"returns":{"tuple":[]},"stateful":true}],"kind":"contract_main","name":"AeForUsers","payable":false,"state":{"record":[{"name":"receiver","type":{"map":["address","int"]}},{"name":"deployer","type":"address"},{"name":"total_balance","type":"int"}]},"type_defs":[]}},"externalEncodedAci":[],"interface":"main contract AeForUsers =\n  record state = {receiver : map(address, int),deployer : address,total_balance : int}\n  stateful entrypoint init : () => AeForUsers.state\n  payable stateful entrypoint send_money_to_this_contract : () => bool\n  stateful entrypoint set_receiver : (address, int) => unit\n  stateful entrypoint withdraw : (int) => unit\n  stateful entrypoint checkUserBalance : () => int\n  stateful entrypoint checkContractBalance : () => int\n  stateful entrypoint getSumOfTotalBalanceOfUser : () => int\n  stateful entrypoint withdrawAll : () => unit\n"}}
